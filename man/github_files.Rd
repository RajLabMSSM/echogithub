% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/github_files.R
\name{github_files}
\alias{github_files}
\title{Find, filter, and download files in a GitHub repository}
\usage{
github_files(
  owner,
  repo,
  branch = c("master"),
  query = NULL,
  ignore.case = FALSE,
  method = c("gh", "httr"),
  token = gh::gh_token(),
  download = FALSE,
  download_dir = tempdir(),
  overwrite = FALSE,
  timeout = 5 * 60,
  nThread = 1,
  verbose = TRUE
)
}
\arguments{
\item{owner}{Repo owner name
(can be organization or individual GitHub account name).}

\item{repo}{GitHub repository name.}

\item{branch}{Which branch to search.}

\item{query}{Regex query to filter files by.}

\item{ignore.case}{if \code{FALSE}, the pattern matching is \emph{case
      sensitive} and if \code{TRUE}, case is ignored during matching.}

\item{method}{Method to perform queries with:
\itemize{
\item{"gh"}{Uses the R package \pkg{gh}. 
Uses GitHub token to avoid query limits.}
\item{"httr"}{Uses the R package \pkg{httr}.
More flexible but quickly runs into webscraping limits imposed by GitHub.}
}}

\item{token}{GitHub Personal Authentication Token (PAT).
See \href{https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token}{
here for further instructions}.}

\item{download}{Whether to download the files. The downloaded file paths
will be added to a new column named "path_local".}

\item{download_dir}{Directory to download files into.}

\item{overwrite}{If a local file already exists, overwrite it.}

\item{timeout}{How long to wait before timing out during queries/downloads
(in units of seconds).}

\item{nThread}{Number of threads to parallelize queries/downloads across.}

\item{verbose}{Print messages.}
}
\value{
A list of paths.
}
\description{
Search for files within a GitHub repository and filter them 
by a regex \code{query}. Optionally, can download these selected files to 
your local computer using the original folder structure.
\emph{NOTET}: To search your private repos, make sure you
GitHub token is supplied to the \code{token} argument, or is saved as in your
\emph{~.Renviron} file, e.g.: \code{GITHUB_TOKEN=<token_here>}
}
\examples{
files <- github_files(owner = "RajLabMSSM", 
                      repo = "Fine_Mapping_Shiny",
                      query = ".md$")
}
